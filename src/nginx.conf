user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

     # HTTP server block
    server {
        listen 80;
        listen [::]:80;
        server_name thedatasolved.com www.thedatasolved.com; ####################### SET DOMAIN NAME HERE!!!!!

        # Serve Let's Encrypt challenge files
        location /.well-known/acme-challenge/ {
            root /var/www/html;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server block
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name thedatasolved.com www.thedatasolved.com; ####################### SET DOMAIN NAME HERE!!!!!

        # SSL Certificates
        ssl_certificate /etc/letsencrypt/live/thedatasolved.com/fullchain.pem; ####################### SET DOMAIN NAME HERE!!!!!
        ssl_certificate_key /etc/letsencrypt/live/thedatasolved.com/privkey.pem;

        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Serve static files
        location /static/ {
            alias /static/;  # Path to the static directory
            expires 3d;      # Cache static files
        }

        # Proxy requests to Django (Gunicorn)
        location / {
            proxy_pass http://django:8000;  # Connect to the Django container
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Error handling
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
