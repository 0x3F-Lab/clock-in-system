services:
  django:
    container_name: django
    restart: always
    image: django
    build:
      context: ./django  # Path to your Django directory
    volumes:
      - static_volume:/app/staticfiles  # Serve static files via a shared volume
      - ~/debug.log:/app/debug.log      # Add file to ensure easy access to the debug log file
      - ~/tasks.log:/app/tasks.log
    env_file:
      - .env.production
    ports:
      - "8000:8000"  # Expose Django server
    depends_on:
      - redis
      - celery
      - celery-beat

  celery:
    container_name: celery
    restart: always
    image: django  # Reuse the same Django image
    command: celery -A your_project worker --loglevel=info
    volumes:
      - ./django/debug.log:/app/debug.log:rw
      - ./django/tasks.log:/app/tasks.log:rw
    env_file:
      - .env.production
    depends_on:
      - redis
      - django

  celery-beat:
    container_name: celerybeat
    restart: always
    image: django
    command: celery -A your_project beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./django/debug.log:/app/debug.log:rw
      - ./django/tasks.log:/app/tasks.log:rw
    env_file:
      - .env.production
    depends_on:
      - redis
      - django

  redis:
    image: redis:7
    container_name: redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    env_file:
      - .env

  nginx:
    container_name: nginx
    restart: always
    image: nginx:perl
    volumes:
      - static_volume:/static:ro  # Serve static files via a shared volume
      - /etc/letsencrypt:/etc/letsencrypt:ro # For SSL encryption keys
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # Nginx configuration file
      - /var/www/html/:/var/www/html/:ro # For certbot authentication
    ports:
      - "80:80" # HTTP port for redirection to HTTPS port
      - "443:443" # HTTPS port
    environment:
      - TZ=Australia/Perth
    depends_on:
      - django

volumes:
  static_volume:  # Shared volume for serving static files