user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '[$time_local] $remote_addr - $remote_user "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # Limit requests to 10 per minute per IP
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=15r/m;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # Ensure limiting uses client's real IP and not cloudflare's IP
    real_ip_header CF-Connecting-IP;

    # Cloudflare IPV4 ranges
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;

    # Cloudflare IPv6 ranges:
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2a06:98c0::/29;
    set_real_ip_from 2c0f:f248::/32;

    # Default server block to handle requests by IP or unmatched domains
    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name _;

        return 301 https://thedatasolved.com$request_uri;  # Redirect to your domain
    }

    server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;

        server_name _;

        # SSL Certificates
        ssl_certificate /etc/letsencrypt/live/thedatasolved.com/fullchain.pem; ####################### SET DOMAIN NAME HERE!!!!!
        ssl_certificate_key /etc/letsencrypt/live/thedatasolved.com/privkey.pem;

        return 301 https://thedatasolved.com$request_uri;  # Redirect to your domain
    }

    # HTTP server block
    server {
        listen 80;
        listen [::]:80;
        server_name thedatasolved.com www.thedatasolved.com; ####################### SET DOMAIN NAME HERE!!!!!

        # Serve Let's Encrypt challenge files
        location /.well-known/acme-challenge/ {
            alias /var/www/html/.well-known/acme-challenge/;
            try_files $uri =404;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server block
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name thedatasolved.com www.thedatasolved.com; ####################### SET DOMAIN NAME HERE!!!!!

        # SSL Certificates
        ssl_certificate /etc/letsencrypt/live/thedatasolved.com/fullchain.pem; ####################### SET DOMAIN NAME HERE!!!!!
        ssl_certificate_key /etc/letsencrypt/live/thedatasolved.com/privkey.pem;

        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Serve Let's Encrypt challenge files
        location /.well-known/acme-challenge/ {
            alias /var/www/html/.well-known/acme-challenge/;
            try_files $uri =404;
        }

        # Serve static files
        location /static/ {
            alias /static/;  # Path to the static directory
            #expires 3d;      # Cache static files
            expires off;     # Disable caching for development
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        }

        location /api/ {
          limit_req zone=api_limit burst=20 nodelay;

          proxy_pass http://django:8000;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy requests to Django (Gunicorn)
        location / {
            proxy_pass http://django:8000;  # Connect to the Django container
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Error handling
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
